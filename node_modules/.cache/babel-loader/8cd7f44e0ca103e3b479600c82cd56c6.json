{"remainingRequest":"/Users/pzy/Downloads/vue-admin-template-master/node_modules/babel-loader/lib/index.js!/Users/pzy/Downloads/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/pzy/Downloads/vue-admin-template-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pzy/Downloads/vue-admin-template-master/src/views/charts/components/PieChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pzy/Downloads/vue-admin-template-master/src/views/charts/components/PieChart.vue","mtime":1606272173179},{"path":"/Users/pzy/Downloads/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pzy/Downloads/vue-admin-template-master/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/pzy/Downloads/vue-admin-template-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pzy/Downloads/vue-admin-template-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KaW1wb3J0IGVjaGFydHMgZnJvbSAiZWNoYXJ0cyI7CgpyZXF1aXJlKCJlY2hhcnRzL3RoZW1lL21hY2Fyb25zIik7IC8vIGVjaGFydHMgdGhlbWUKCgppbXBvcnQgcmVzaXplIGZyb20gIi4vbWl4aW5zL3Jlc2l6ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBtaXhpbnM6IFtyZXNpemVdLAogIHByb3BzOiB7CiAgICBjbGFzc05hbWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiY2hhcnQiCiAgICB9LAogICAgd2lkdGg6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiMTAwJSIKICAgIH0sCiAgICBoZWlnaHQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiMjh2aCIKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydDogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMuaW5pdENoYXJ0KCk7CiAgICB9KTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICBpZiAoIXRoaXMuY2hhcnQpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRoaXMuY2hhcnQuZGlzcG9zZSgpOwogICAgdGhpcy5jaGFydCA9IG51bGw7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0Q2hhcnQ6IGZ1bmN0aW9uIGluaXRDaGFydCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmNoYXJ0ID0gZWNoYXJ0cy5pbml0KHRoaXMuJGVsLCAibWFjYXJvbnMiKTsKICAgICAgdGhpcy5jaGFydC5zaG93TG9hZGluZygpOwogICAgICB0aGlzLmF4aW9zLmdldCgiaHR0cDovLyIgKyB0aGlzLmF4aW9zVVJMICsgIi9hcGkvZmluZEJ5RGF0ZSIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHZhciBkYXRhID0gcmVzLmRhdGE7CiAgICAgICAgdmFyIGxpc3QgPSBbXTsKCiAgICAgICAgZm9yICh2YXIga2V5IGluIGRhdGEpIHsKICAgICAgICAgIHZhciBib29rX25hbWUgPSBrZXk7CiAgICAgICAgICB2YXIgY29tbWVudF9udW1zID0gZGF0YVtrZXldOwogICAgICAgICAgbGlzdC5wdXNoKHsKICAgICAgICAgICAgbmFtZTogYm9va19uYW1lLAogICAgICAgICAgICB2YWx1ZTogY29tbWVudF9udW1zCiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIF90aGlzMi5jaGFydC5oaWRlTG9hZGluZygpOwoKICAgICAgICBfdGhpczIuY2hhcnQuc2V0T3B0aW9uKHsKICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgdHJpZ2dlcjogIml0ZW0iLAogICAgICAgICAgICBmb3JtYXR0ZXI6ICJ7YX0gPGJyLz57Yn0gOiB7Y30gKHtkfSUpIgogICAgICAgICAgfSwKICAgICAgICAgIC8vIHRpdGxlOiB7CiAgICAgICAgICAvLyAgIHRleHQ6ICLlkITlubTku73mgqPnl4XkurrmlbAiLAogICAgICAgICAgLy8gICAvLyBzdWJ0ZXh0OiAi57qv5bGe6Jma5p6EIiwKICAgICAgICAgIC8vICAgbGVmdDogJ2NlbnRlcicsCiAgICAgICAgICAvLyAgIHRleHRTdHlsZToKICAgICAgICAgIC8vICAge2ZvbnRTaXplOjUwfQogICAgICAgICAgLy8gfSwKICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgICAgdHlwZTogInNjcm9sbCIsCiAgICAgICAgICAgIGxlZnQ6IDAsCiAgICAgICAgICAgIGRhdGE6IGxpc3QubmFtZQogICAgICAgICAgfSwKICAgICAgICAgIHRvb2xib3g6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgZmVhdHVyZTogewogICAgICAgICAgICAgIGRhdGFWaWV3OiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgcmVhZE9ubHk6IGZhbHNlCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBtYWdpY1R5cGU6IHsKICAgICAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgICAgICB0eXBlOiBbInBpZSJdCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICByZXN0b3JlOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBzYXZlQXNJbWFnZTogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgbmFtZTogIuWQhOW5tOS7veaCo+eXheS6uuaVsCIsCiAgICAgICAgICAgIHR5cGU6ICJwaWUiLAogICAgICAgICAgICByb3NlVHlwZTogInJhZGl1cyIsCiAgICAgICAgICAgIHJhZGl1czogWzMwLCAxNjBdLAogICAgICAgICAgICBjZW50ZXI6IFsiNTAlIiwgIjUwJSJdLAogICAgICAgICAgICBkYXRhOiBsaXN0LAogICAgICAgICAgICBhbmltYXRpb25FYXNpbmc6ICJjdWJpY0luT3V0IiwKICAgICAgICAgICAgYW5pbWF0aW9uRHVyYXRpb246IDM2MDAsCiAgICAgICAgICAgIHRvcDogJzEwMCcKICAgICAgICAgIH1dCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["PieChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"className\" :style=\"{ height: height, width: width }\" />\n</template>\n\n<script>\nimport echarts from \"echarts\";\nrequire(\"echarts/theme/macarons\"); // echarts theme\nimport resize from \"./mixins/resize\";\n\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: \"chart\",\n    },\n    width: {\n      type: String,\n      default: \"100%\",\n    },\n    height: {\n      type: String,\n      default: \"28vh\",\n    },\n  },\n  data() {\n    return {\n      chart: null,\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initChart();\n    });\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(this.$el, \"macarons\");\n       this.chart.showLoading();\n      this.axios.get(\"http://\"+this.axiosURL+\"/api/findByDate\").then((res) => {\n        let data = res.data;\n        let list = [];\n        for (let key in data) {\n          let book_name = key;\n          let comment_nums = data[key];\n          list.push({ name: book_name, value: comment_nums });\n        }\n         this.chart.hideLoading();\n\n        this.chart.setOption({\n          tooltip: {\n            trigger: \"item\",\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\",\n          },\n\n        // title: {\n        //   text: \"各年份患病人数\",\n        //   // subtext: \"纯属虚构\",\n        //   left: 'center',\n        //   textStyle:\n        //   {fontSize:50}\n        // },\n          legend: {\n            show: false,\n            type:\"scroll\",\n            left:0,\n            data: list.name,\n          },\n                     toolbox: {\n            show: true,\n            feature: {\n              dataView: { show: true, readOnly: false },\n              magicType: { show: true, type: [\"pie\"] },\n              restore: { show: true },\n              saveAsImage: { show: true },\n            },\n          },\n          series: [\n            {\n              name: \"各年份患病人数\",\n              type: \"pie\",\n              roseType: \"radius\",\n              radius: [30, 160],\n              center: [\"50%\", \"50%\"],\n              data: list,\n              animationEasing: \"cubicInOut\",\n              animationDuration: 3600,\n              top:'100',\n            },\n          ],\n        });\n      });\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views/charts/components"}]}